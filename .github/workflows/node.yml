name: Deploy Actions

on:
  push:
    branches: [main]

jobs:
  deploy:
    if: github.ref == 'refs/heads/main'
    runs-on: [ubuntu-latest]
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          key: ${{secrets.SSH_KEY}}
          username: ${{secrets.SSH_USERNAME}}
          passphrase: ${{secrets.SSH_PASSPHRASE}}
          command_timeout: 200m
          script_stop: true
          script: |
            echo "[Changing Directory to RateTheLandlord]"
            cd /home/RateTheLandlord
            echo "[Pulling Repo from Github]"
            git pull
            cd frontend
            rm -rf .next
            cd ..
            echo "[Removing existing env file]"
            rm -rf .env
            echo "[Creating new env file]"
            touch .env
            echo BEPORT=${{secrets.BEPORT}} >> .env
            echo ENVIRONMENT=${{secrets.ENVIRONMENT}} >> .env
            echo FEPORT=${{secrets.FEPORT}} >> .env
            echo HCPATCHA_SECRET_KEY=${{secrets.HCPATCHA_SECRET_KEY}} >> .env
            echo HCPATCHA_SITE_KEY=${{secrets.API_TOKEN_SALT}} >> .env
            echo JWT_KEY="${{secrets.JWT_KEY}}" >> .env
            echo API_URL=${{secrets.API_URL}} >> .env
            echo NEXT_PUBLIC_HCPATCHA_SITE_KEY=${{secrets.NEXT_PUBLIC_HCPATCHA_SITE_KEY}} >> .env
            echo OPENAI_API_KEY=${{secrets.OPENAI_API_KEY}} >> .env
            echo PGDATABASE=${{secrets.PGDATABASE}} >> .env
            echo PGHOST=${{secrets.PGHOST}} >> .env
            echo PGPASSWORD="${{secrets.PGPASSWORD}}" >> .env
            echo PGPORT=${{secrets.PGPORT}} >> .env
            echo PGUSERNAME=${{secrets.PGUSERNAME}} >> .env
            echo PGUSERNAME=${{secrets.PGUSERNAME}} >> .env
            echo UMUSERNAME=${{secrets.UMUSERNAME}} >> .env
            echo UMPASSWORD="${{secrets.UMPASSWORD}}" >> .env
            echo UMDATABASE=${{secrets.UMDATABASE}} >> .env
            echo DATABASE_URL=${{secrets.DATABASE_URL}} >> .env
            cat .env
            echo "[Building Docker Containers]"
            docker-compose build --no-cache
            echo "[Starting Docker Containers]"
            docker-compose up -d